spring.main.banner-mode = off
server.port = 8080

spring.thymeleaf.cache = false
spring.jpa.open-in-view = false

# * PostgreSQL Database configuration
spring.datasource.url = jdbc:postgresql://localhost:5432/<NAME>
spring.datasource.username = <USR>
spring.datasource.password = <PWD>
spring.datasource.driver-class-name = org.postgresql.Driver

# * PostgreSQLHibernate configuration
spring.jpa.show-sql = false
spring.jpa.properties.hibernate.format_sql = false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# disable hibernate alter table script
spring.jpa.hibernate.ddl-auto = none

# * Embedded server configuration
server.error.whitelabel.enabled = false
server.error.include-stacktrace = never
server.error.include-message = never
server.error.include-binding-errors = never
server.error.include-exception = false

# * Tomcat server configuration
server.tomcat.accept-count = 100
server.tomcat.max-connections = 1000
server.tomcat.uri-encoding = UTF-8

# * Logger configuration
logging.pattern.dateformat = dd.MM.yyyy HH:mm:ss.SSS
spring.output.ansi.enabled = ALWAYS
logging.pattern.console = %clr(%d{dd.MM.yyyy HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr\
  ([%1.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n
logging.pattern.file = %d{dd.MM.yyyy HH:mm:ss.SSS} %-5p ${PID} --- [%1.15t] %-40.40logger{0} : %m%n
logging.file.name = log/runtime/runtime.log
